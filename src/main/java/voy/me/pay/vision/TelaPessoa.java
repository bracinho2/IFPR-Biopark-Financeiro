/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package voy.me.pay.vision;

import java.awt.Component;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import voy.me.pay.control.ControllerCidade;
import voy.me.pay.control.ControllerEstado;
import voy.me.pay.control.ControllerPessoa;
import voy.me.pay.dao.CidadeDAO;
import voy.me.pay.entity.Cidade;
import voy.me.pay.entity.Estado;
import voy.me.pay.entity.Pessoa;
import voy.me.pay.entity.to.PessoaTableModel;

/**
 *
 * @author UnioestePROEX
 */
public class TelaPessoa extends javax.swing.JFrame {

    PessoaTableModel tableModelPessoas = new PessoaTableModel();

    List<Estado> estados = new ArrayList();

    public TelaPessoa() {
        initComponents();

        jtPessoas.setModel(tableModelPessoas);

        ControllerEstado e = new ControllerEstado();
        estados = e.listEstado();

        cbEstado.addItem("Selecione");

        for (int i = 0; i < estados.size(); i++) {
            cbEstado.addItem(estados.get(i).getSigla());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtNome = new javax.swing.JTextField();
        jtEmail = new javax.swing.JTextField();
        jtEndereco = new javax.swing.JTextField();
        cbEstado = new javax.swing.JComboBox<>();
        jtNumero = new javax.swing.JTextField();
        cbCidade = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtPessoas = new javax.swing.JTable();
        jtBairro = new javax.swing.JTextField();
        jbSalvar = new javax.swing.JButton();
        jbEditar = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jcCliente = new javax.swing.JComboBox<>();
        jcFornecedor = new javax.swing.JComboBox<>();
        jcSituacao = new javax.swing.JComboBox<>();
        jtTelefone = new javax.swing.JFormattedTextField();
        jtCpfCnpj = new javax.swing.JTextField();
        jtComplemento = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jtNome.setBorder(javax.swing.BorderFactory.createTitledBorder("Nome"));
        jtNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtNomeActionPerformed(evt);
            }
        });

        jtEmail.setBorder(javax.swing.BorderFactory.createTitledBorder("E-Mail"));

        jtEndereco.setBorder(javax.swing.BorderFactory.createTitledBorder("Endereco"));

        cbEstado.setBorder(javax.swing.BorderFactory.createTitledBorder("Estado"));
        cbEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEstadoActionPerformed(evt);
            }
        });

        jtNumero.setBorder(javax.swing.BorderFactory.createTitledBorder("Numero"));

        cbCidade.setModel(cbCidade.getModel());
        cbCidade.setBorder(javax.swing.BorderFactory.createTitledBorder("Cidade"));
        cbCidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCidadeActionPerformed(evt);
            }
        });

        jtPessoas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtPessoas);

        jtBairro.setBorder(javax.swing.BorderFactory.createTitledBorder("Bairro"));

        jbSalvar.setText("Salvar");
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jbEditar.setText("Editar");
        jbEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEditarActionPerformed(evt);
            }
        });

        jButton3.setText("Excluir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Sair");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jcCliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Não", "Sim" }));
        jcCliente.setBorder(javax.swing.BorderFactory.createTitledBorder("Cliente"));
        jcCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcClienteActionPerformed(evt);
            }
        });

        jcFornecedor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Não", "Sim" }));
        jcFornecedor.setBorder(javax.swing.BorderFactory.createTitledBorder("Fornecedor"));

        jcSituacao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Inativo", "Ativo" }));
        jcSituacao.setBorder(javax.swing.BorderFactory.createTitledBorder("Situação"));

        jtTelefone.setBorder(javax.swing.BorderFactory.createTitledBorder("Telefone"));
        jtTelefone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtTelefoneActionPerformed(evt);
            }
        });

        jtCpfCnpj.setBorder(javax.swing.BorderFactory.createTitledBorder("CPF ou CNPJ"));

        jtComplemento.setBorder(javax.swing.BorderFactory.createTitledBorder("Complemento"));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(305, 305, 305)
                                .addComponent(jbSalvar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbEditar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(279, 279, 279)
                                .addComponent(jcCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(109, 109, 109)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jtComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jtEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jtCpfCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbCidade, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(0, 217, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtCpfCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jcFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbSalvar)
                            .addComponent(jbEditar)
                            .addComponent(jButton3)
                            .addComponent(jButton4))))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    @SuppressWarnings("empty-statement")
    private void cbEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEstadoActionPerformed
        if (cbEstado.getSelectedIndex() > 0) {
            //cbCidade.removeAllItems();
            
            cbCidade.addItem("Selecione");
            
            int eSelecionado = cbEstado.getSelectedIndex()-1;
            Estado e = estados.get(eSelecionado);
            for(Cidade c: e.getCidade()){
                cbCidade.addItem(c.getNome());
            } 
        } else {
            System.out.println("teste");
        }



    }//GEN-LAST:event_cbEstadoActionPerformed

    private void jtNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtNomeActionPerformed

    }//GEN-LAST:event_jtNomeActionPerformed

    private void cbCidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCidadeActionPerformed

    }//GEN-LAST:event_cbCidadeActionPerformed

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed

        ControllerPessoa p = new ControllerPessoa();
        Pessoa pessoa = new Pessoa();

        //ajusta o botao
        if (jbSalvar.getText().equals("Atualizar")) {
            jbSalvar.setText("Salvar");
        }
        
        //Obriga preenchimento do cpf ou cnpj;
        if (jtCpfCnpj.getText().isEmpty()) {
            Component frame = null;
            JOptionPane.showMessageDialog(frame, "Insira os dados para Cadastrar!");

        } else {
            
            //Aqui atualiza os dados do objeto;
            if (jtPessoas.getSelectedRow() != -1) {

                int row = jtPessoas.getSelectedRow();

                Object id = jtPessoas.getValueAt(row, 0);

                pessoa.setId((Long) id);
                pessoa.setNome(jtNome.getText());
                pessoa.setTelefone(jtTelefone.getText());
                pessoa.setCpfCnpj(jtCpfCnpj.getText());
                pessoa.setEmail(jtEmail.getText());
                pessoa.setEndereco(jtEndereco.getText());
                pessoa.setEnderecoNumero(jtNumero.getText());
                pessoa.setBairro(jtBairro.getText());
                pessoa.setComplemento(jtComplemento.getText());
                
                pessoa.setEstado((String) cbEstado.getSelectedItem().toString());
                pessoa.setCidade(cbCidade.getSelectedItem().toString());
                
                pessoa.setCliente(jcCliente.getSelectedIndex());
                pessoa.setFornecedor(jcFornecedor.getSelectedIndex());
                pessoa.setRegistroAtivo(jcSituacao.getSelectedIndex());
                

                p.saveOrUpdate(pessoa);
                tableModelPessoas.updateRow();

                //limpar campos;
                jtCpfCnpj.setText("");
                jtEmail.setText("");
                jtNome.setText("");
                jtEndereco.setText("");
                jtNumero.setText("");
                jtBairro.setText("");
                jtComplemento.setText("");
                jtTelefone.setText("");
                

            } else {
                
                //aqui insere um novo objeto;
                if (cbEstado.getSelectedItem() == "") {

                    Component frame = null;
                    JOptionPane.showMessageDialog(frame, "Selecione o Estado e a Cidade!");
                
                                        
                } else {
                    //coleta dados do formulario;
                    pessoa.setNome(jtNome.getText());
                    pessoa.setTelefone(jtTelefone.getText());
                    pessoa.setCpfCnpj(jtCpfCnpj.getText());
                    pessoa.setEmail(jtEmail.getText());
                    pessoa.setEndereco(jtEndereco.getText());
                    pessoa.setEnderecoNumero(jtNumero.getText());
                    pessoa.setBairro(jtBairro.getText());
                    pessoa.setComplemento(jtComplemento.getText());
                    pessoa.setEstado((String) cbEstado.getSelectedItem().toString());
                    pessoa.setCidade(cbCidade.getSelectedItem().toString());
                    
                    pessoa.setCliente(jcCliente.getSelectedIndex());
                    pessoa.setFornecedor(jcFornecedor.getSelectedIndex());
                    pessoa.setRegistroAtivo(jcSituacao.getSelectedIndex());

                    tableModelPessoas.addRow(p.saveOrUpdate(pessoa));
                }
                
            }
        }


    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jcClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcClienteActionPerformed

    private void jtTelefoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtTelefoneActionPerformed

    }//GEN-LAST:event_jtTelefoneActionPerformed

    private void jbEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEditarActionPerformed

        if (jtPessoas.getSelectedRow() != -1) {

            jbSalvar.setText("Atualizar");

            int row = jtPessoas.getSelectedRow();
            if (row > -1) {
                
                //coleta dados da tabela;
                Object id = jtPessoas.getValueAt(row, 0);
                Object nome = jtPessoas.getValueAt(row, 1);
                Object cpfCnpj = jtPessoas.getValueAt(row, 2);
                Object email = jtPessoas.getValueAt(row, 3);
                Object telefone = jtPessoas.getValueAt(row, 4);
                Object endereco = jtPessoas.getValueAt(row, 5);
                Object numero = jtPessoas.getValueAt(row, 6);
                Object bairro = jtPessoas.getValueAt(row, 7);
                Object complemento = jtPessoas.getValueAt(row, 8);
                Object cidade = jtPessoas.getValueAt(row, 9);
                Object estado = jtPessoas.getValueAt(row, 10);
                Object cliente = jtPessoas.getValueAt(row, 11);
                Object fornecedor = jtPessoas.getValueAt(row, 12);
                Object status = jtPessoas.getValueAt(row, 13);
                
                

                //insere as informaçoes nos campos
                jtCpfCnpj.setText((String) cpfCnpj);
                jtEmail.setText((String) email);
                jtTelefone.setText((String) telefone);
                jtNome.setText((String) nome);
                jtEndereco.setText((String) endereco);
                jtNumero.setText((String) numero);
                jtBairro.setText((String) bairro);
                jtComplemento.setText((String) complemento);

                //botoes cidade e estado;
                cbEstado.setSelectedItem(estado);
                cbCidade.setSelectedItem(cidade);
                
                //botoes para perfil da pessoa;
                
                jcCliente.setSelectedIndex(cliente.equals("Sim") ? 1 : 0);
                jcFornecedor.setSelectedIndex(fornecedor.equals("Sim") ? 1 : 0 );
                jcSituacao.setSelectedIndex(status.equals("Sim") ? 1 : 0);

            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione uma categoria para editar!");
        }


    }//GEN-LAST:event_jbEditarActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        ControllerPessoa p = new ControllerPessoa();

        if (jtPessoas.getSelectedRow() != -1) {

            if (JOptionPane.showConfirmDialog(null, "Deseja excluir este cadastro?", "Atenção!",
                    JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {

                int row = jtPessoas.getSelectedRow();
                if (row > -1) {

                    //para selecionar o ID a coluna deve ser setada com valor 0;
                    //int column = jtCategorias.getSelectedColumn();
                    Object id = jtPessoas.getValueAt(row, 0);

                    p.remove((Long) id);

                    tableModelPessoas.removeRow(jtPessoas.getSelectedRow());

                }
            }

        } else {
            JOptionPane.showMessageDialog(this, "Selecione uma categoria para Excluir!");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPessoa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPessoa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPessoa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPessoa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new TelaPessoa().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbCidade;
    private javax.swing.JComboBox<String> cbEstado;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbEditar;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JComboBox<String> jcCliente;
    private javax.swing.JComboBox<String> jcFornecedor;
    private javax.swing.JComboBox<String> jcSituacao;
    private javax.swing.JTextField jtBairro;
    private javax.swing.JTextField jtComplemento;
    private javax.swing.JTextField jtCpfCnpj;
    private javax.swing.JTextField jtEmail;
    private javax.swing.JTextField jtEndereco;
    private javax.swing.JTextField jtNome;
    private javax.swing.JTextField jtNumero;
    private javax.swing.JTable jtPessoas;
    private javax.swing.JFormattedTextField jtTelefone;
    // End of variables declaration//GEN-END:variables
}
